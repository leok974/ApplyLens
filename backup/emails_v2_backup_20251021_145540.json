{"applylens_emails_v2":{"description":"ApplyLens emails normalization v2 (smart flags)","processors":[{"rename":{"field":"snippet","target_field":"snippet_raw","ignore_missing":true}},{"html_strip":{"field":"body_html","target_field":"body_text","ignore_missing":true}},{"lowercase":{"field":"from","ignore_missing":true}},{"lowercase":{"field":"to","ignore_missing":true}},{"lowercase":{"field":"cc","ignore_missing":true}},{"lowercase":{"field":"bcc","ignore_missing":true}},{"lowercase":{"field":"subject","ignore_missing":true}},{"trim":{"field":"subject","ignore_missing":true}},{"script":{"lang":"painless","source":"\n        // Normalize labels\n        if (ctx.containsKey('labels') && ctx.labels instanceof List) {\n          def ln = new ArrayList();\n          for (def l : ctx.labels) { if (l != null) ln.add(l.toString().toLowerCase()); }\n          ctx.labels_norm = ln;\n        }\n\n        // Flags from content\n        def subj = ctx.containsKey('subject') && ctx.subject != null ? ctx.subject : '';\n        def body = ctx.containsKey('body_text') && ctx.body_text != null ? ctx.body_text : '';\n        def text = (subj + ' ' + body).toLowerCase();\n\n        ctx.archived = (ctx.containsKey('archived_at') && ctx.archived_at != null);\n        ctx.deleted  = (ctx.containsKey('deleted_at') && ctx.deleted_at != null);\n\n        // Simple interview/offer detection\n        ctx.is_interview = text.contains('interview') || text.contains('screen') || text.contains('phone screen') || text.contains('onsite');\n        ctx.is_offer     = text.contains('offer') || text.contains('offer letter');\n\n        // Recruiter heuristics\n        def f = ctx.containsKey('from') && ctx.from != null ? ctx.from : '';\n        ctx.is_recruiter = f.contains('recruit') || f.contains('talent') || f.contains('careers@') || f.contains('hr@');\n\n        // Calendar invite detection (subject/body hints)\n        ctx.has_calendar_invite = text.contains('calendar invite') || text.contains('ics') || text.contains('event:') || text.contains('zoom meeting') || text.contains('google meet');\n\n        // Attachment hint (from metadata if present)\n        if (ctx.containsKey('attachments') && ctx.attachments instanceof List) {\n          ctx.has_attachment = ctx.attachments.size() > 0;\n          for (def a : ctx.attachments) {\n            if (a != null && a.toString().toLowerCase().contains('.ics')) { ctx.has_calendar_invite = true; }\n          }\n        } else {\n          ctx.has_attachment = text.contains('attached') || text.contains('attachment');\n        }\n\n        // Guess company from email domain (from: name <user@company.com>)\n        if (f.contains('@')) {\n          try {\n            def dom = f.substring(f.indexOf('@')+1);\n            dom = dom.replace('>', '').replace('\"', '').trim().toLowerCase();\n            if (dom.contains('.')) dom = dom.substring(0, dom.indexOf('.'));\n            if (dom.length() >= 2 && dom.length() <= 32) ctx.company_guess = dom;\n          } catch (Exception e) { /* ignore */ }\n        }\n\n        // Thread fallback key\n        if (!ctx.containsKey('thread_id') || ctx.thread_id == null) {\n          ctx.thread_key = subj.toLowerCase().trim() + '|' + (ctx.containsKey('from') ? ctx.from : '');\n        }\n      "}},{"date":{"field":"received_at","formats":["ISO8601","EEE, dd MMM yyyy HH:mm:ss Z"],"ignore_failure":true}},{"date":{"field":"sent_at","formats":["ISO8601","EEE, dd MMM yyyy HH:mm:ss Z"],"ignore_failure":true}},{"date":{"field":"archived_at","formats":["ISO8601"],"ignore_failure":true}},{"fingerprint":{"fields":["gmail_id","thread_id","from","to","subject","received_at"],"target_field":"doc_hash","method":"SHA-1"}},{"remove":{"field":["_temp","snippet_raw"],"ignore_missing":true}}],"on_failure":[{"set":{"field":"_ingest_error","value":"{{_ingest.on_failure_message}}"}}]}}

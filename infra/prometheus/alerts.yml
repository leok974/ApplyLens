groups:
  - name: applylens
    rules:
      - alert: ApplyLensApiDown
        expr: (1 - up{job="applylens-api"}) == 1
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "API is down"
          description: "applylens-api target not responding > 1m"

      - alert: HighHttpErrorRate
        expr: |
          (sum(rate(applylens_http_requests_total{status_code=~"5.."}[5m]))
           / ignoring(status_code) sum(rate(applylens_http_requests_total[5m]))) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "HTTP 5xx > 5% (5m)"
          description: "Error rate above 5% for 5 minutes"

      - alert: BackfillFailing
        expr: increase(applylens_backfill_requests_total{result="error"}[10m]) > 0
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Backfill errors detected"
          description: "One or more backfill errors in the last 10 minutes"

      - alert: BackfillRateLimitedSpike
        expr: increase(applylens_backfill_requests_total{result="rate_limited"}[15m]) > 10
        for: 5m
        labels:
          severity: info
        annotations:
          summary: "Frequent rate-limits"
          description: "More than 10 rate-limited backfills in 15 minutes"

      - alert: GmailDisconnected
        expr: max_over_time(applylens_gmail_connected[15m]) < 1
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "Gmail disconnected"
          description: "Gmail connection gauge has been 0 for 15 minutes"

      - alert: DependenciesDown
        expr: (min(applylens_db_up) == 0) or (min(applylens_es_up) == 0)
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "DB/ES not ready"
          description: "Either DB or Elasticsearch reports down"

      - alert: AssistantLowHitRate
        expr: |
          (rate(assistant_tool_queries_total{has_hits="0"}[5m])
           / ignoring(has_hits) rate(assistant_tool_queries_total[5m])) > 0.7
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Assistant search hit rate < 30%"
          description: "More than 70% of assistant queries returning 0 results for 10m. Possible ES issue or mis-scoped queries."

  # ===========================================================================
  # SECURITY ALERTS - Added 2025-10-20
  # ===========================================================================
  - name: applylens_security
    rules:
      # CSRF Protection
      - alert: HighCSRFFailureRate
        expr: rate(applylens_csrf_fail_total[5m]) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CSRF failure rate"
          description: "CSRF failures at {{ $value }} req/sec on {{ $labels.path }}"

      - alert: CriticalCSRFFailureRate
        expr: rate(applylens_csrf_fail_total[5m]) > 50
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "CRITICAL: Very high CSRF failures"
          description: "CSRF failures at {{ $value }} req/sec - possible attack"

      # Token Decryption
      - alert: HighTokenDecryptionErrors
        expr: rate(applylens_crypto_decrypt_error_total[5m]) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Token decryption errors"
          description: "Decryption failures: {{ $value }}/sec ({{ $labels.error_type }})"

      - alert: InvalidTagErrors
        expr: rate(applylens_crypto_decrypt_error_total{error_type="invalid_tag"}[5m]) > 0.5
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "CRITICAL: Invalid authentication tags"
          description: "AES-GCM auth failures - possible tampering or wrong key"

      # Rate Limiting
      - alert: FrequentRateLimiting
        expr: rate(applylens_rate_limit_exceeded_total[5m]) > 5
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Frequent rate limiting"
          description: "Rate limit exceeded {{ $value }}/sec from {{ $labels.ip_prefix }}"

      - alert: MassiveRateLimitExceeded
        expr: rate(applylens_rate_limit_exceeded_total[1m]) > 50
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "CRITICAL: Massive rate limiting"
          description: "Rate limit exceeded {{ $value }}/sec - possible DoS"

      # reCAPTCHA
      - alert: LowCaptchaScores
        expr: histogram_quantile(0.50, rate(applylens_recaptcha_score_bucket[5m])) < 0.5
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Low reCAPTCHA scores"
          description: "Median score: {{ $value }} (threshold: 0.5)"

      - alert: HighCaptchaFailureRate
        expr: rate(applylens_recaptcha_verify_total{status="failure"}[5m]) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High reCAPTCHA failure rate"
          description: "Failures at {{ $value }}/sec"

      # Authentication
      - alert: HighAuthFailureRate
        expr: rate(applylens_auth_attempt_total{status="failure"}[5m]) > 5
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High auth failure rate"
          description: "Auth failures: {{ $value }}/sec ({{ $labels.method }})"

      - alert: SuspiciousAuthActivity
        expr: rate(applylens_auth_attempt_total{status="failure"}[1m]) > 20
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "CRITICAL: Suspicious auth activity"
          description: "Rapid auth failures: {{ $value }}/sec - credential stuffing?"

  # ===========================================================================
  # EMAIL RISK v3.1 ALERTS - Added 2025-10-21
  # ===========================================================================
  - name: applylens_email_risk_v31
    rules:
      # Suspicious email advice spike
      - alert: EmailRiskAdviceSpikeHigh
        expr: rate(applylens_email_risk_served_total{level="suspicious"}[5m]) > 0.5
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High suspicious advice volume"
          description: "Suspicious email advice rate > 0.5/min over 10m (staging). Current rate: {{ $value }}/sec"

      # No advice served (ingestion/API/UI regression)
      - alert: EmailRiskAdviceDrop
        expr: sum by (level) (increase(applylens_email_risk_served_total[30m])) == 0
        for: 30m
        labels:
          severity: warning
        annotations:
          summary: "No advice served for 30m"
          description: "Potential ingestion/API/UI regression - zero advice served for {{ $labels.level }}"

      # User feedback anomaly (surge in scam reports)
      - alert: EmailRiskFeedbackAnomaly
        expr: rate(applylens_email_risk_feedback_total{verdict="scam"}[15m]) > 0.1
        for: 15m
        labels:
          severity: info
        annotations:
          summary: "Surge in scam feedback reports"
          description: "Scam feedback rate: {{ $value }}/sec over 15m - possible phishing campaign"

      # High false positive rate (too many legit marked on suspicious)
      - alert: EmailRiskHighFalsePositives
        expr: |
          (rate(applylens_email_risk_feedback_total{verdict="legit"}[1h])
           / ignoring(verdict) rate(applylens_email_risk_served_total{level="suspicious"}[1h])) > 0.15
        for: 1h
        labels:
          severity: warning
        annotations:
          summary: "High false positive rate"
          description: ">15% of suspicious advice marked as legit - consider weight tuning"

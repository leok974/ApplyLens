# Production Nginx Configuration for applylens.app
# This config works with Cloudflare Tunnel (HTTP backend, Cloudflare handles SSL)

# Real IP Configuration - Extract client IP from Cloudflare/proxy headers
# This ensures rate limiting works on actual client IPs, not proxy IPs
set_real_ip_from 10.0.0.0/8;       # Docker internal networks
set_real_ip_from 172.16.0.0/12;    # Docker bridge networks
set_real_ip_from 192.168.0.0/16;   # Private networks
set_real_ip_from 173.245.48.0/20;  # Cloudflare IP ranges
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 104.16.0.0/13;
set_real_ip_from 104.24.0.0/14;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 131.0.72.0/22;
real_ip_header X-Forwarded-For;
real_ip_recursive on;

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# =============================================================================
# UPSTREAM CONFIGURATION
# Uses Docker service names (NOT IPs) for automatic DNS resolution
# This prevents 503 errors when containers restart with new IPs
# =============================================================================
upstream applylens_api_upstream {
    # Use container name - Docker DNS automatically resolves to current IP
    # IMPORTANT: Do NOT use static IPs like 172.25.0.4:8003
    # If API container restarts, Docker assigns new IP and nginx auto-discovers it
    server api:8003;

    # Connection pooling for better performance
    keepalive 32;
    keepalive_timeout 60s;
}

upstream applylens_web_upstream {
    server web:80;
    keepalive 16;
}

# Main Server Block
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name applylens.app www.applylens.app _;

    # Basic Settings
    client_max_body_size 25m;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # Upgrade any insecure requests to HTTPS (fixes mixed content issues)
    add_header Content-Security-Policy "upgrade-insecure-requests" always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_min_length 256;

    # =============================================================================
    # HEALTH CHECKS
    # =============================================================================
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    location = /healthz {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # =============================================================================
    # SEO & ROBOTS
    # =============================================================================
    location = /robots.txt {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nAllow: /\n";
    }

    location = /sitemap.xml {
        access_log off;
        add_header Content-Type application/xml;
        return 200 "<?xml version='1.0' encoding='UTF-8'?><urlset xmlns='http://www.sitemaps.org/schemas/sitemap/0.9'><url><loc>https://applylens.app/</loc></url></urlset>";
    }

    # =============================================================================
    # WEB APPLICATION (React SPA - Static Files with Fallback)
    # =============================================================================

    # Static assets - NO fallback, these must exist
    location ~ ^/assets/ {
        proxy_pass http://applylens_web_upstream;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache static assets aggressively
        proxy_cache_valid 200 1y;
        proxy_cache_bypass 0;
        add_header Cache-Control "public, immutable";

        # NO error interception for assets
        proxy_intercept_errors off;
    }

    # Legacy /web/ path - redirect to root
    location /web/ {
        return 301 /;
    }

    location /web {
        return 301 /;
    }

    # API Unavailable Handler - Return JSON instead of HTML 502 page
    # This prevents "Cloudflare-style" error pages when backend is completely down
    location @api_unavailable {
        default_type application/json;
        add_header Content-Type application/json always;
        # Return 503 with JSON body (frontend handles this gracefully)
        return 503 '{"status":"unavailable","message":"API service temporarily unavailable. Retrying...","code":503}';
    }

    # =============================================================================
    # API ENDPOINTS
    # =============================================================================

    # API Health Check
    location /api/healthz {
        proxy_pass http://applylens_api_upstream/healthz;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # API Routes
    location /api/ {
        proxy_pass http://applylens_api_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # WebSocket support (for potential real-time features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts for API operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Retry on transient errors (prevents 502 loops)
        # Only retry on idempotent methods (GET, HEAD) and safe errors
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;

        # Custom error handling - return JSON instead of HTML error pages
        # This prevents "Cloudflare-style" 502 errors from breaking the frontend
        proxy_intercept_errors on;
        error_page 502 503 504 = @api_unavailable;
    }

    # =============================================================================
    # OAUTH CALLBACKS (Critical - exact path matching)
    # =============================================================================
    location /api/auth/google/callback {
        proxy_pass http://applylens_api_upstream/auth/google/callback;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # OAuth needs longer timeout
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # =============================================================================
    # API DOCUMENTATION
    # =============================================================================
    location /docs {
        proxy_pass http://applylens_api_upstream/docs;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openapi.json {
        proxy_pass http://applylens_api_upstream/openapi.json;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =============================================================================
    # MONITORING (Protected - Basic Auth in Production)
    # =============================================================================
    location /grafana/ {
        # TODO: Enable in production
        # auth_basic "Monitoring Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass http://grafana:3000/;
        proxy_set_header X-Forwarded-Prefix /grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket for live updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /kibana/ {
        # TODO: Enable in production
        # auth_basic "Analytics Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass http://kibana:5601/kibana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket for live updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    location /prometheus/ {
        # TODO: Enable in production
        # auth_basic "Metrics Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =============================================================================
    # SECURITY
    # =============================================================================

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }

    # Service Worker blocking (if not used)
    location = /service-worker.js {
        add_header Content-Type application/javascript;
        return 410 "Service workers are not used in this application";
    }

    location = /sw.js {
        add_header Content-Type application/javascript;
        return 410 "Service workers are not used in this application";
    }

    # =============================================================================
    # CATCH-ALL: SPA fallback for client-side routing
    # =============================================================================
    # Serve the React SPA for all unmatched routes (client-side routing)
    location / {
        proxy_pass http://applylens_web_upstream;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # SPA Routing - always serve index.html for 404s
        proxy_intercept_errors on;
        error_page 404 = /index.html;

        # No caching for HTML
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        add_header Cache-Control "no-cache, no-store, must-revalidate";

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}

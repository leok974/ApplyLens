name: Secret Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run weekly on Mondays at 9am UTC
    - cron: '0 9 * * 1'

jobs:
  gitleaks:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better scanning
      
      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # For Gitleaks Pro
        with:
          args: --verbose --no-git
      
      - name: Upload SARIF results
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: gitleaks
      
      - name: Comment on PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ⚠️ Secrets Detected

            Gitleaks found potential secrets in this PR. Please review the findings in the Security tab.

            ### Next Steps
            1. **Do NOT merge** until secrets are removed
            2. Review the [Secrets Policy](../docs/SECRETS_POLICY.md)
            3. Redact or remove the detected secrets
            4. If false positive, add to \`.gitleaks.toml\`

            See the [Security tab](../security/code-scanning) for details.`
            })
      
      - name: Fail if secrets found
        if: steps.gitleaks.outcome == 'failure'
        run: |
          echo "::error::Secrets detected! Check the Security tab for details."
          exit 1

  secret-policy-check:
    name: Check Documentation for Secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Scan docs for common secret patterns
        run: |
          echo "Checking documentation for potential secrets..."
          
          # Patterns to check
          patterns=(
            "eyJr[A-Za-z0-9_-]+"  # Base64 Grafana keys
            "ghp_[A-Za-z0-9]{36}"  # GitHub PAT
            "AKIA[A-Z0-9]{16}"     # AWS Access Key
            "sk-[A-Za-z0-9]{32}"   # OpenAI API Key
            "Bearer [A-Za-z0-9_-]+" # Bearer tokens
          )
          
          findings=0
          for pattern in "${patterns[@]}"; do
            echo "Checking pattern: $pattern"
            matches=$(grep -r -n -E "$pattern" docs/ || true)
            if [ -n "$matches" ]; then
              echo "::warning::Found potential secrets matching pattern: $pattern"
              echo "$matches"
              findings=$((findings + 1))
            fi
          done
          
          if [ $findings -gt 0 ]; then
            echo "::error::Found $findings potential secret patterns in documentation"
            echo "Please review docs/SECRETS_POLICY.md for guidelines"
            exit 1
          fi
          
          echo "✅ No obvious secrets found in documentation"
